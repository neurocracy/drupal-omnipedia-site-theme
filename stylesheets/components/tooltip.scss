// -----------------------------------------------------------------------------
//   Tooltip component
// -----------------------------------------------------------------------------

@use '../variables/colours'; // Configure colours.
@use 'material.common/material.colour' as material-colour;
@use 'material.common/material.panel' as material-panel;
@use 'material.common/material.shadow' as material-shadow;
@use 'sass:color';
@use 'sass/helpers/colour';
@use 'tooltip/_tooltip' as tooltip;

///
/// Whether to compile tooltip styles with a gradient background.
///
$use-gradient: false;

///
/// Whether to compile tooltip styles with a stroke along edge with arrow.
///
$use-stroke: true;

///
/// Whether to compile tooltip styles with an exaggerated shadow in dark mode.
///
$use-exaggerated-shadow: true;

///
/// Tooltip gradient base colour; derived from Material panel dark background.
///
$gradient-colour-on-dark: color.adjust(
  material-panel.$background-colour-dark-on-dark,
  $lightness: 7%,
);

///
/// Tooltip stroke colour used along edge with arrow.
///
$stroke-colour-on-dark: color.adjust(
  material-panel.$background-colour-dark-on-dark,
  $lightness: 6%,
);

:root {

  ///
  /// Tooltip background colour.
  ///
  /// @todo Custom properties for all the things. Also correctly vary by light/
  ///   dark mode and whether light on light, dark on dark, etc.
  ///
  --tooltip-background-colour: #{
    material-panel.$background-colour-dark-on-dark
  };

  @if ($use-gradient == true) {

    ///
    /// Tooltip gradient start colour.
    ///
    /// This is the most pronounced part of the gradient right on the edge with
    /// the arrow.
    ///
    --tooltip-gradient-start-colour: #{$gradient-colour-on-dark};

    ///
    /// Tooltip gradient end colour.
    ///
    /// This is where it fades into the tooltip background.
    ///
    --tooltip-gradient-end-colour: #{color.adjust(
      $gradient-colour-on-dark, $alpha: -1,
    )};

    ///
    /// Tooltip gradient distance when tooltips are to the left or right.
    ///
    --tooltip-gradient-distance-horizontal: 20vw;

    ///
    /// Tooltip gradient distance when tooltips are above or below.
    ///
    --tooltip-gradient-distance-vertical: 20vh;

  }

  @if ($use-stroke == true) {

    ///
    /// Tooltip stroke thickness to enhance edge with arrow contrast.
    ///
    --tooltip-contrast-stroke-thickness: 0.15rem;

    ///
    /// Tooltip stroke colour to enhance edge with arrow contrast.
    ///
    --tooltip-contrast-stroke-colour: #{$stroke-colour-on-dark};

  }

  @if ($use-exaggerated-shadow == true) {

    ///
    /// Tooltip exaggerated shadow blur radius.
    ///
    --tooltip-exaggerated-shadow-blur-radius: 0.3rem;

    ///
    /// Tooltip exaggerated shadow colour.
    ///
    --tooltip-exaggerated-shadow-colour: black;

    ///
    /// Tooltip exaggerated shadow offset when to left/right of trigger.
    ///
    --tooltip-exaggerated-shadow-offset-horizontal: -0.1rem;

    ///
    /// Tooltip exaggerated shadow offset when above/below trigger.
    ///
    --tooltip-exaggerated-shadow-offset-vertical: -0.4rem;

    ///
    /// Tooltip exaggerated shadow size.
    ///
    /// This is used as the shadow element height when along the top or bottom
    /// edge of the tooltip. When the tooltip is along the left or right edge,
    /// this is the width of the shadow element.
    ///
    --tooltip-exaggerated-shadow-size: 1rem;

  }

}

.tippy-tooltip {

  // This limits the properties to just those required for Tippy as it defaults
  // to all which results in our gradient position being transitioned if/when
  // the tooltip changes orientation.
  transition-property: opacity, perspective, transform, visibility;

}

// This adds a faint background gradient on tooltips using the dark Material
// theme to attempt to have the tooltip contrast better against a dark page or
// parent element. The gradient always starts at the edge of the tooltip that
// has the arrow pointing to its triggering element and fades away from that
// edge into the background colour.
.tippy-tooltip.material-dark-theme.material-dark-theme { // Specificity.

  @include colour.on-dark-scheme {

    @if ($use-stroke == true) {

      filter:
        drop-shadow(
          var(--tooltip-contrast-stroke-offset-x, 0)
          var(--tooltip-contrast-stroke-offset-y, 0)
          var(--tooltip-contrast-stroke-blur-radius, 0)
          var(--tooltip-contrast-stroke-colour)
        )
        drop-shadow(material-shadow.filter-downward(
          tooltip.$tooltip-shadow-depth
        ))
        drop-shadow(material-shadow.filter-ambient(
          tooltip.$tooltip-shadow-depth
        ));

    }

    @if ($use-gradient == true) {

      background-repeat: no-repeat;

      background-image: linear-gradient(
        to var(--tooltip-gradient-to-direction),
        var(--tooltip-gradient-start-colour),
        var(--tooltip-gradient-end-colour),
      );

      .tippy-roundarrow.tippy-roundarrow svg { // Specificity.
        fill: var(--tooltip-gradient-start-colour);
      }

    }

  }

  &:not([data-animatefill]),
  .tippy-backdrop {
    background-color: var(--tooltip-background-colour);
  }

}

.tippy-popper {

  @if ($use-gradient == true) {

    &[x-placement^='top'] .tippy-tooltip.material-dark-theme,
    &[x-placement^='bottom'] .tippy-tooltip.material-dark-theme {
      background-size: 100% var(--tooltip-gradient-distance-vertical);
    }

    &[x-placement^='left'] .tippy-tooltip.material-dark-theme,
    &[x-placement^='right'] .tippy-tooltip.material-dark-theme {
      background-size: var(--tooltip-gradient-distance-horizontal) 100%;
    }

  }

  @if ($use-exaggerated-shadow == true) {

    @include colour.on-dark-scheme {

      @supports (filter: blur(var(--tooltip-exaggerated-shadow-blur-radius))) {

        &::after {

          content: '';

          position: absolute;
          z-index: -1;

          filter: blur(var(--tooltip-exaggerated-shadow-blur-radius));

          background-color: var(--tooltip-exaggerated-shadow-colour);

        }

        &[x-placement^='top']::after,
        &[x-placement^='bottom']::after {

          width:  100%;
          height: var(--tooltip-exaggerated-shadow-size);

        }

        &[x-placement^='left']::after,
        &[x-placement^='right']::after {

          top: 0

          width:  var(--tooltip-exaggerated-shadow-size);
          height: 100%;

        }

        &[x-placement^='top']::after {
          bottom: var(--tooltip-exaggerated-shadow-offset-vertical);
        }

        &[x-placement^='bottom']::after {
          top: var(--tooltip-exaggerated-shadow-offset-vertical);
        }

        &[x-placement^='left']::after {
          right: var(--tooltip-exaggerated-shadow-offset-horizontal);
        }

        &[x-placement^='right']::after {
          left: var(--tooltip-exaggerated-shadow-offset-horizontal);
        }

      }

    }

  }

  &[x-placement^='top'] .tippy-tooltip.material-dark-theme {

    @if ($use-gradient == true) {

      --tooltip-gradient-to-direction: top;

      background-position: center bottom;

    }

    @if ($use-stroke == true) {

      --tooltip-contrast-stroke-offset-y: var(
        --tooltip-contrast-stroke-thickness
      );

    }

  }

  &[x-placement^='bottom'] .tippy-tooltip.material-dark-theme {

    @if ($use-gradient == true) {

      --tooltip-gradient-to-direction: bottom;

      background-position: center top;

    }

    @if ($use-stroke == true) {

      --tooltip-contrast-stroke-offset-y: calc(var(
        --tooltip-contrast-stroke-thickness
      ) * -1);

    }

  }

  &[x-placement^='left'] .tippy-tooltip.material-dark-theme {

    @if ($use-gradient == true) {

      --tooltip-gradient-to-direction: left;

      background-position: right center;

    }

    @if ($use-stroke == true) {

      --tooltip-contrast-stroke-offset-x: var(
        --tooltip-contrast-stroke-thickness
      );

    }

  }
  &[x-placement^='right'] .tippy-tooltip.material-dark-theme {

    @if ($use-gradient == true) {

      --tooltip-gradient-to-direction: right;

      background-position: left center;

    }

    @if ($use-stroke == true) {

      --tooltip-contrast-stroke-offset-x: calc(var(
        --tooltip-contrast-stroke-thickness
      ) * -1);

    }

  }

}
