// -----------------------------------------------------------------------------
//   Omnipedia founder message base partial
// -----------------------------------------------------------------------------

@use '../../layout/config' as layout-config; // Configure layout.
@use 'base:layout/sidebars' as layout-sidebars;
@use 'founder_message/_founder_message' as founder-message;
@use '../../components/card';
@use 'sass:list';
@use 'sass/helpers/colour';
@use 'sass/helpers/layout';
@use 'sass/helpers/selector';

///
/// Founder block background logo URL.
///
/// Note that this is relative to the location of the compiled stylesheet, not
/// this partial.
///
$block-background-logo-url: '../../images/logo_faded_greyscale.svg?v=1';

///
/// Founder message stacking order. Later in the list means a higher z-index.
///
$stacking-order: background, content;

///
/// Set the background for the founder message block.
///
/// This includes a faded version of the Omnipedia logo and a greyscale gradient
/// from side to side.
///
/// Note that this uses a semi-transparent gradient background-image to allow
/// for more flexiblity in styling.
///
/// @param {String} $direction [ltr]
///   The text direction, either ltr or rtl.
///
/// @link https://ambientimpact.com/web/snippets/safari-bug-with-gradients-that-fade-to-transparent
///   Explanation of why we use a colour with zero opacity instead of
///   'transparent'.
///
@mixin background($direction: ltr) {

  background-image:
    // Faded Omnipedia logo.
    url($block-background-logo-url),
    // Gradient going between the primary content background colour and a
    // slightly darker version of the primary content background colour.
    linear-gradient(
      to if($direction == ltr, right, left),
      hsla(0, 0%, 0%, 0.20),
      hsla(0, 0%, 0%, 0)
    );

  @include colour.on-dark-scheme {
    background-image:
      // Faded Omnipedia logo.
      url($block-background-logo-url),
      // Gradient going between the primary content background colour and a
      // slightly light version of the primary content background colour.
      linear-gradient(
        to if($direction == ltr, right, left),
        hsla(0, 0%, 100%, 0.15),
        hsla(0, 0%, 0%, 0)
      );
  }

  background-repeat:    no-repeat, no-repeat;
  background-position:  if($direction == ltr, 100%, 0) 20%, center;

}

.block-omnipedia-founder-message {

  // Vertical padding always uses the full padding value.
  padding-top:    founder-message.$block-padding;
  padding-bottom: founder-message.$block-padding;

  // On smaller screen widths, we use the layout.$gutter since the content
  // columm is flush with the sides of the viewport and this matches the rest of
  // the content.
  padding-left:   layout-config.$gutter;
  padding-right:  layout-config.$gutter;

  // This pulls the block flush with the edges of the viewport.
  margin-left:    layout-config.$gutter * -1;
  margin-right:   layout-config.$gutter * -1;
  max-width:      none;

  // On smaller screen widths, we just set vertical padding to match the card
  // styles, without horizontal borders.
  border-top:
    card.$border-width solid card.$border-colour-on-light;
  border-bottom:
    card.$border-width solid card.$border-colour-on-light;

  @include colour.on-dark-scheme {
    border-top-color:     card.$border-colour-on-dark;
    border-bottom-color:  card.$border-colour-on-dark;
  }

  // When we're using the layout with sidebars on either side of the content
  // column, switch to using the full card styles and set larger padding on all
  // sides.
  @include layout-sidebars.on-sidebar-beside-content('any') {

    @include card.base;

    margin-left:  0;
    margin-right: 0;

    padding: founder-message.$block-padding;

  }

  &::before {

    content: '';

    display: block;

    position: absolute;

    top:    0;
    bottom: 0;
    left:   0;
    right:  0;

    z-index: list.index($stacking-order, background);

    @include selector.root-conditions(('[dir=ltr]'), 'html') {
      @include background($direction: ltr);
    }
    @include selector.root-conditions(('[dir=rtl]'), 'html') {
      @include background($direction: rtl);
    }

  }

  &::after {
    z-index: list.index($stacking-order, content);
  }

  .block__title,
  .omnipedia-founder-message__body {

    position: relative;

    z-index: list.index($stacking-order, content);

    // @todo This causes performance issues on mobile; can this be applied only
    //   on high powered devices somehow?
    //
    // text-shadow: 0 0 3px white;
    //
    // @include colour.on-dark-scheme {
    //   text-shadow: 0 0 3px black;
    // }

  }

  .block__title {
    margin-top: -0.5em;
  }

}
