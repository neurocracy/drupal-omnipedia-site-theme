{#
/**
 * @file
 * Theme override to display a single page.
 *
 * This is copied from the ambientimpact_base theme with the following changes:
 *
 * - Added .search-target and .search-anchor elements. See elements for details.
 *
 * Available variables:
 *
 * General utility variables:
 *
 * - base_path: The base URL path of the Drupal installation. Will usually be
 *   "/" unless you have installed Drupal in a sub-directory.
 *
 * - is_front: A flag indicating if the current page is the front page.
 *
 * - logged_in: A flag indicating if the user is registered and signed in.
 *
 * - is_admin: A flag indicating if the user has permission to access
 *   administration pages.
 *
 * Site identity:
 *
 * - front_page: The URL of the front page. Use this instead of base_path when
 *   linking to the front page. This includes the language domain or prefix.
 *
 * Page content (in order of occurrence in the default page.html.twig):
 *
 * - node: Fully loaded node, if there is an automatically-loaded node
 *   associated with the page and the node ID is the second argument in the
 *   page's path (e.g. node/12345 and node/12345/revisions, but not
 *   comment/reply/12345).
 *
 * Regions:
 *
 * - page.header: Items for the header region.
 *
 * - page.primary_menu: Items for the primary menu region.
 *
 * - page.secondary_menu: Items for the secondary menu region.
 *
 * - page.highlighted: Items for the highlighted content region.
 *
 * - page.help: Dynamic help text, mostly for admin pages.
 *
 * - page.content: The main content of the current page.
 *
 * - page.sidebar_first: Items for the first sidebar.
 *
 * - page.sidebar_second: Items for the second sidebar.
 *
 * - page.footer: Items for the footer region.
 *
 * - page.breadcrumb: Items for the breadcrumb region.
 *
 * @see \template_preprocess_page()
 *
 * @see html.html.twig
 */
#}
{% set layout_container_attributes = create_attribute({
  'class': ['layout-container']
}) %}

{% if page.sidebar_first %}
  {% set layout_container_attributes = layout_container_attributes.addClass(
    'layout-container--has-sidebar-first'
  ) %}
{% endif %}

{% if page.sidebar_second %}
  {% set layout_container_attributes = layout_container_attributes.addClass(
    'layout-container--has-sidebar-second'
  ) %}
{% endif %}

{% if page.sidebar_first and page.sidebar_second %}
  {% set layout_container_attributes = layout_container_attributes.addClass(
    'layout-container--has-both-sidebars'
  ) %}
{% endif %}

{% if not page.sidebar_first and not page.sidebar_second %}
  {% set layout_container_attributes = layout_container_attributes.addClass(
    'layout-container--has-no-sidebars'
  ) %}
{% endif %}

{% set search_target_attributes = create_attribute({
  'id':     'search',
  'class':  ['search-target'],
}) %}

{# Note that the 'plain-button' class is needed to ensure the search anchor has
   the same size and layout as the search button. #}
{% set search_anchor_attributes = create_attribute({
  'href':         '#' ~ search_target_attributes.offsetGet('id'),
  'class':        ['search-anchor', 'plain-button'],
  'hidden':       'true',
  'aria-hidden':  'true',
  'tabindex':     '-1',
}) %}

<div{{ layout_container_attributes }}>

  {# This provides the target element for the search anchor. This is position:
     fixed to ensure no scrolling is done by the browser as the target element
     is on-screen at all times. #}
  <div {{ search_target_attributes }}></div>

  {# This provides an anchor that is layered on top of the primary menu region
     search button to toggle the search form even when JavaScript has not
     loaded or some error has prevented it from running.

     @todo Should we include some text? It's hidden from screen readers, so it
       shouldn't matter?
     #}
  <a {{ search_anchor_attributes }}></a>

  <header role="banner">
    {{ page.header }}
  </header>

  {{ page.primary_menu }}
  {{ page.secondary_menu }}

  {{ page.breadcrumb }}

  {{ page.highlighted }}

  {{ page.help }}

  <main role="main">
    <a id="main-content" tabindex="-1"></a>{# link is in html.html.twig #}

    <div class="layout-content">
      {{ page.content }}
    </div>{# /.layout-content #}

    {% if page.sidebar_first %}
      <aside class="layout-sidebar-first" role="complementary">
        {{ page.sidebar_first }}
      </aside>
    {% endif %}

    {% if page.sidebar_second %}
      <aside class="layout-sidebar-second" role="complementary">
        {{ page.sidebar_second }}
      </aside>
    {% endif %}

  </main>

  {% if page.footer %}
    <footer role="contentinfo">
      {{ page.footer }}
    </footer>
  {% endif %}

</div>{# /.layout-container #}
