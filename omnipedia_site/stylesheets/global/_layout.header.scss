// -----------------------------------------------------------------------------
//   Site layout - Header
// -----------------------------------------------------------------------------

// This positions the header and primary menu region as sticky elements along
// the top of the viewport. Despite them being separate elements, generated
// content on .region-primary-menu is used to create the illusion of a shared
// container on narrow screens.

header[role='banner'],
.region-primary-menu {
  position: sticky;

  // This takes viewport top displacement into account, if there is any, and
  // falls back to a value of 0 displacement if the custom property is not
  // defined.
  top: calc(var(--displace-top, 0) + #{$layout-gutter}) !important;

  --headroom-translate-unpinned: calc(
    -100% - #{$layout-gutter * 2} - #{$divider-thickness}
  );
}
.region-primary-menu {
  @include on-sidebar-beside-content(both) {
    // Same as above, but on wide screens.
    top: calc(var(--displace-top, 0) + #{$layout-gap}) !important;

    // Because Chrome is being dumb with rounding errors on the right edge.
    width: calc(100% + #{$divider-thickness});
  }

  --headroom-translate-unpinned: calc(
    -100% - #{$layout-gap * 2} - #{$divider-thickness}
  );
}

// @todo Can we create explicit z-index keywords that allow layering these
//   together correctly?
header[role='banner'] {
  // This must be higher than the primary menu region, as the latter provides
  // the background.
  @include z-index(floating);
}
.region-primary-menu {
  // This must be lower than the header, as the background this provides would
  // otherwise be on top of the header.
  @include z-index(page-floating);
}

header[role='banner'] {
  // The header is reverted to static positioning on wider screens and Headroom
  // transforms are set to zero.
  @include on-sidebar-beside-content(both) {
    position: static;

    --headroom-translate-pinned:    0;
    --headroom-translate-unpinned:  0;
  }
}

.region-primary-menu {
  ///
  /// Local stacking order. Later in the list means a higher z-index.
  ///
  $local-stacking-order:  background, content;

  // The ::before generated content provides the shared background for the
  // header and primary menu region.
  &::before {
    content: '';

    position: absolute;

    top:      -$layout-gutter;
    bottom:   -$layout-gutter;

    @include root-conditions(('[dir=ltr]'), 'html') {
      right:  -$layout-gutter;
    }
    @include root-conditions(('[dir=rtl]'), 'html') {
      left:   -$layout-gutter;
    }

    // These are the full viewport width on narrow screens.
    width:  100vw;

    @include on-sidebar-beside-content(both) {
      left:   0;
      right:  0;
      top:    -$layout-gap;
      bottom: -$layout-gap;

      // On wider screens, we use left and right properties to set the width.
      width:  auto;
    }

    z-index: index($local-stacking-order, background);

    @include set-colours($background: $background-colour-light);

    @include on-dark-colour-scheme {
      @include set-colours($background: $background-colour-dark);
    }
  }

  > * {
    position: relative;
    z-index:  index($local-stacking-order, content);
  }
}
