// -----------------------------------------------------------------------------
//   Site layout
// -----------------------------------------------------------------------------

///
/// The Omnipedia grid definition in compact layout (narrow screens).
///
@mixin omnipedia-layout-grid-compact {
  grid-template-areas:
    'branding       menu-primary'
    'main-content   main-content'
    'sidebar-first  sidebar-first'
    'sidebar-second sidebar-second'
    'footer         footer';

  grid-template-rows:
    minmax($branding-compact-size-min, $branding-compact-size-max)
    1fr
    min-content
    min-content
    min-content;

  grid-template-columns: minmax(10em, 1fr) 2fr;

  grid-row-gap:     $layout-gutter;
  // This adds a bigger gap between the site branding and header items to ensure
  // they read as separate elements.
  grid-column-gap:  $header-distinct-gap;
}

///
/// The Omnipedia grid definition on wider screens.
///
@mixin omnipedia-layout-grid-wide {
  grid-template-areas:
    'branding       menu-primary  ....'
    'branding       main-content  sidebar-second'
    'sidebar-first  main-content  sidebar-second'
    '....           footer        ....';

  grid-template-rows:
    $header-row-height
    min-content
    1fr
    min-content;
}

// Common stuff regardless of whether subgrid is supported.
.layout-container {
  @include media('<layout-with-both-sidebars') {
    margin-top: $layout-gutter;
  }

  header[role='banner'] {
    grid-area: branding;
  }

  .region-primary-menu {
    grid-area: menu-primary;

    // Required to override ambientimpact_base/stylesheets/global/_layout.scss
    // when that applies its wider screen layout grid.
    @include on-sidebar-beside-content(both) {
      grid-area: menu-primary;
    }
  }

  footer[role='contentinfo'] {
    grid-area: footer;
  }
}

// If subgrid is supported, use it to lay out the site layout, allowing the grid
// to be inherited into the main content area.
//
// @todo Add support for other regions, such as highlighted and help. These are
//   currently not accounted for due to the difficulty of correctly placing all
//   regions while also maintaining the branding and sidebar locations.
//
// @link https://gridbyexample.com/examples/
// @link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Subgrid
@supports (grid-template-columns: subgrid) {
  // Matches specificity in ambientimpact_base and not any higher.
  .layout-container > * {
    grid-column-start:  main-content;
    grid-column-end:    main-content;
  }
  @include use-grid {
    .layout-container {
      display: grid;

      @include omnipedia-layout-grid-compact;
    }

    main[role='main'] {
      display: grid;

      grid-template-rows: subgrid;
      grid-row-start:     main-content;
      grid-row-end:       sidebar-second;

      grid-template-columns: subgrid;
    }

    @include on-sidebar-beside-content(both) {
      .layout-container {
        @include omnipedia-layout-grid-wide;
      }

      main[role='main'] {
        grid-row-start: main-content;
        grid-row-end:   main-content;
      }

      // Not working stuff follows:

      // .layout-container {
      //   grid-template-areas:
      //     '....           menu-primary  ....'
      //     'branding       main-content  sidebar-second'
      //     'branding       main-content  sidebar-second'
      //     'branding       main-content  sidebar-second'
      //     'sidebar-first  main-content  sidebar-second'
      //     'footer         footer        footer';
      //   grid-template-rows: repeat(6, min-content);
      // }

      // header[role='banner'] {
      //   grid-area: branding;
      // }

      // .region-highlighted {
      //   grid-column-start:  main-content;
      //   grid-column-end:    main-content;
      //   grid-row-start:     main-content;
      // }

      // main[role='main'] {
      //   grid-template-rows: subgrid;
      //   grid-row-start:     main-content;
      //   grid-row-end:       main-content;

      //   .layout-content {
      //     grid-column-start:  main-content;
      //     grid-column-end:    main-content;
      //     grid-row-end:       main-content;
      //   }
      // }

      // /Not working ends.
    }
  }
}

// If subgrid is not supported, this approximates the subgrid layout by nesting
// two grids, one on .layout-container, and the pre-existing one on
// main[role='main'].
@supports not (grid-template-columns: subgrid) {
  .layout-container {
    // These have to be placed outside of the @include use-grid because they
    // also use the mixin and double nesting would cause two nested
    // body.use-grid selectors which would never match.
    @include layout-grid;
    @include layout-max-width;
  }

  // This must span the full width of the parent's grid and the full rows of the
  // main-content column.
  main[role='main'] {
    grid-column-start:  sidebar-first;
    grid-column-end:    sidebar-second;
    grid-row-start:     main-content;
    grid-row-end:       main-content;
  }

  @include use-grid {
    .layout-container {
      display: grid;

      @include omnipedia-layout-grid-compact;

      @include on-sidebar-beside-content(both) {
        @include omnipedia-layout-grid-wide;
      }

      margin-left:  auto;
      margin-right: auto;

      > * {
        // Remove these added in ambientimpact_base' global/_layout.scss so that
        // they don't squish the columns.
        margin-left:  0;
        margin-right: 0;
      }
    }

    .layout-sidebar-first {
      &::before {
        content: '';
        display: block;

        // This creates an intrinsic ratio with the heights of the site logo,
        // name, and slogan, all divided by the width of the column.
        padding-top: (128 + 20 + 13) / 128 * 100%;

        // Don't forget the spacing between elements!
        margin-bottom: $branding-spacing * 2 + $layout-gap;
      }
    }
  }
}
