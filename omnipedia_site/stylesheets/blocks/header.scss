// -----------------------------------------------------------------------------
//   Omnipedia site header block
// -----------------------------------------------------------------------------

@use '../variables/layout' as layout-variables; // Configure layout.
@use 'base:layout/sidebars' as layout-sidebars;
@use 'base:forms/search';
@use 'sass/helpers/layout';
@use 'sass:list';

// This partial handles most of the internal layout and functionality of the
// site header element.
//
// @see ../global/_layout.header.scss
//   Partial that handles layout stuff between the header and branding.

.omnipedia-header {
  ///
  /// Local stacking order. Later in the list means a higher z-index.
  ///
  $local-stacking-order: other, search;

  @include layout.use-grid {
    display: grid;

    align-items:      center;
    grid-gap:         layout-variables.$branding-spacing;
    grid-auto-flow:   column;

    // Narrow screen layout when the site branding is in the header.
    &--has-search {
      grid-template-columns: 1fr min-content calc(
        #{search.$button-icon-size} + #{search.$button-spacing}
      );
    }
    &--no-search {
      grid-template-columns: 1fr min-content;
    }

    justify-items: end;

    @include layout-sidebars.on-sidebar-beside-content(any) {
      // This adds a bigger gap between the header items to ensure they read as
      // separate elements.
      grid-column-gap: layout-variables.$header-distinct-gap;

      // Remove the columns when the site branding is in the sidebar.
      grid-template-columns: auto;

      // Items should be pushed apart to opposite ends if we're displaying one
      // or more sidebars beside the content column.
      justify-content:  space-between;
    }

    > * {
      // Align contents to the centre vertical axis and the end on the
      // horizontal.
      display: grid;

      align-items:    center;
      justify-items:  end;

      grid-row: 1;

      @include layout-sidebars.on-sidebar-beside-content(any) {
        justify-items: stretch;
      }
    }

    &__current-date,
    &__menu {
      z-index: list.index($local-stacking-order, other);
    }

    &__current-date {
      grid-column: 1;

      @include layout-sidebars.on-sidebar-beside-content(any) {
        grid-column: auto;
      }
    }

    &__menu {
      grid-column: 2;

      margin-left:  0;
      margin-right: 0;

      // The menu link is hidden if sidebars are beside the content column.
      //
      // @todo Could showing this still be useful for keyboard navigation on
      //   wide screens?
      @include layout-sidebars.on-sidebar-beside-content(both) {
        display: none;
      }

      // This prevents Chrome on Android wrapping the "Menu" at some viewport
      // sizes.
      white-space: nowrap;
    }

    &__search-form {
      z-index: list.index($local-stacking-order, search);

      // If subgrid is not supported, position this absolutely across the
      // entire container.
      @supports not (grid-template-columns: subgrid) {
        position: absolute;
        top:    0;
        bottom: 0;
        left:   0;
        right:  0;

        @include layout-sidebars.on-sidebar-beside-content(any) {
          position: static;
        }
      }

      &,
      .form--inline {
        grid-column-start:  1;
        grid-column-end:    -1;
      }

      justify-items: stretch;

      max-width: none;

      @include layout-sidebars.on-sidebar-beside-content(any) {
        grid-column: auto;

        max-width: search.$form-container-max-width;
      }

      .form-item-terms,
      .form-actions {
        // This attempts to better align the search form field with the other
        // header elements.
        position: relative;
        top:      -0.4em;

        @include layout-sidebars.on-sidebar-beside-content(any) {
          top:    0.3em;
        }

        margin-top:     0;
        margin-bottom:  0;
      }
    }
  }

}
