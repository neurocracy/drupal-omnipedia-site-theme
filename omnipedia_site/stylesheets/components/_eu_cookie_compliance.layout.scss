// -----------------------------------------------------------------------------
//   EU cookie compliance pop-up layout partial
// -----------------------------------------------------------------------------

@use '../variables/layout' as layout-variables; // Configure layout.
@use 'base:layout/config' as layout-config;
@use 'base:layout/container' as layout-container;
@use 'base:layout/sidebars' as layout-sidebars;
@use 'base:layout/vertical_spacing' as vertical-spacing;
@use 'sass/helpers/selector';
@use 'sass/helpers/layout';
@use 'base:forms/search';
@use 'base:global/content';

///
/// Keyframes to fade in the pop-up if already consented.
///
@keyframes eu-cookie-compliance-popup-consented-reveal {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.eu-cookie-compliance-popup {

  // This compensates for the scrollbar gutter when the pop-up is closing so
  // that the pop-up contents don't shift when the viewport scrollbar appears.
  @include selector.root-conditions(('[dir=ltr]'), 'html') {
    right: calc(var(--scrollbar-gutter, 0) * -1);
  }
  @include selector.root-conditions(('[dir=rtl]'), 'html') {
    left: calc(var(--scrollbar-gutter, 0) * -1);
  }

  html.omnipedia-overlay-open & {
    @include selector.root-conditions(('[dir=ltr]'), 'html') {
      right: 0;
    }
    @include selector.root-conditions(('[dir=rtl]'), 'html') {
      left: 0;
    }
  }

  bottom: 0;

  max-width: none;

  // This applies a delayed animation to fade in the pop-up when it's first
  // inserted into the DOM to avoid it briefly peeking along the bottom. This
  // will become unnecessary if/when the pop-up is refactored to use CSS
  // transforms and transitions/animations.
  animation-name:             eu-cookie-compliance-popup-consented-reveal;
  animation-duration:         200ms;
  animation-timing-function:  linear;
  animation-fill-mode:        backwards;
  animation-delay:            500ms;

  // If the user has not yet consented to anything, don't apply the animation so
  // that the JavaScript can slide the panel into view without it fading in.
  body.eu-cookie-compliance-status-null & {
    animation-name:     none;
    animation-delay:    0;
    animation-duration: 0;
  }

  opacity: 0;

  // This transitions the pop-up to opacity of 0 and a delay equal to that of
  // the module JavaScript jQuery animation when not open, so that users don't
  // see the pop-up briefly along the bottom if they resize the window quickly.
  transition-property:  opacity;
  transition-duration:  1ms;
  transition-delay:     var(--eu-cookie-compliance-transition-duration, 0ms);

  // When the pop-up is open, remove the transition delay and set it to opacity
  // of 1 immediately so that it can be seen sliding into view.
  body.eu-cookie-compliance-popup-open & {
    opacity: 1;

    transition-delay: 0ms;
  }

  .eu-cookie-compliance-banner {
    max-height: 70vh;

    // Make this scrollable.
    overflow-y: auto;
  }

  .eu-cookie-compliance-content {
    display: block;

    @include layout-container.max-width;

    padding-left:   layout-config.$gutter;
    padding-right:  layout-config.$gutter;

    // This matches ../global/_layout.grid.scss
    @include layout-sidebars.on-sidebar-beside-content(any) {
      padding-left:   layout-config.$gap;
      padding-right:  layout-config.$gap;
    }

    padding-top:    layout-config.$gutter;
    padding-bottom: layout-config.$gutter;

    box-sizing: border-box;

    > * + * {
      @include vertical-spacing.vertical-spacing(
        $spacing-small: content.$item-vertical-spacing-small,
        $spacing-large: content.$item-vertical-spacing-large,
      );
    }

  }

  .eu-cookie-compliance-message {
    max-width: none;

    float: none;
  }

  .eu-cookie-compliance-categories {

    @include layout.use-grid {
      display: grid;

      grid-template-columns: repeat(auto-fit, minmax(20em, 1fr));

      column-gap: 2em;
      row-gap:    1em;
    }

  }

  .eu-cookie-compliance-buttons {
    float: none;

    max-width: none;

    margin-top: 2em;
  }

}
